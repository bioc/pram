% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainModelFilter.R
\name{trainModelFilter}
\alias{trainModelFilter}
\title{Train a random forest classifier to filter transcript models}
\usage{
trainModelFilter(fbeds, ftpms, fgtf, outdir, expr_min_tpm = 1,
  cv_n_folds = 10, nthreads = 1)
}
\arguments{
\item{fbeds}{A string vector of BED files for histone marks and/or RNA
Pol II ChIP-seq signals in RPKM.  They are required to have
at least three columns describing the names of chromosome,
starting and ending positions, and strand.}

\item{ftpms}{A string vector of RSEM quantification results at the
isoform level.  It is required to have two columns named
'transcript_id' and 'TPM' to define the abundances of
training transcripts.  This file is the one with a suffix
'.isoforms.results' generated by RSEM.}

\item{fgtf}{A string of a GTF file defining the genomic coordinates for
all training transcripts.  The file is required for have 'exon'
in the feature column, where transcript coordinates will be
derived.}

\item{outdir}{A string of a directory to save three output files: 'rf.rda'
for a random forest R object, 'roc_pr.pdf' plots ROC and
precision-recall curves from cross validation,
and 'cv.tsv' saved the prediction
results on training transcript from cross validation.  Files
with the same names in this folder will be overwritten.}

\item{expr_min_tpm}{Minimium TPM for a transcript to be defined as
expressed.  An 'expressed' or 'unexpressed'
transcript must have TPM >= or < this cutoff in all
supplied RSEM quantification files (ftpms),
respectively.  Otherwise, a transcript's expression
status will be defined as 'unknown'.  Transcripts with
'unknown' expression status will be omitted from the
training and output files.  Default: 1.}

\item{cv_n_folds}{Number of folds for cross validation.  'Expressed' and
'unexpressed' training transcripts will be stratified
for calculating AUC.  Default: 10.}

\item{nthreads}{An integer defining the number of threads to-be-used.
Default: 1}
}
\description{
Train a random forest classifier to filter transcript models
}
